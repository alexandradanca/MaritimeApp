// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebAPI.Data;

#nullable disable

namespace WebAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebAPI.Models.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("WebAPI.Models.Port", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Id_Country")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Id_Country");

                    b.ToTable("Ports");
                });

            modelBuilder.Entity("WebAPI.Models.Ship", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<float>("MaxSpeed")
                        .HasColumnType("real");

                    b.Property<string>("ShipName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Ships");
                });

            modelBuilder.Entity("WebAPI.Models.Voyage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id_ArrivalPort")
                        .HasColumnType("int");

                    b.Property<int>("Id_DeparturePort")
                        .HasColumnType("int");

                    b.Property<int>("Id_Ship")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("VoyageDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Id_ArrivalPort");

                    b.HasIndex("Id_DeparturePort");

                    b.HasIndex("Id_Ship");

                    b.ToTable("Voyages");
                });

            modelBuilder.Entity("WebAPI.Models.Port", b =>
                {
                    b.HasOne("WebAPI.Models.Country", "Country")
                        .WithMany("Ports")
                        .HasForeignKey("Id_Country")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("WebAPI.Models.Voyage", b =>
                {
                    b.HasOne("WebAPI.Models.Port", "ArrivalPort")
                        .WithMany("ArrivingVoyages")
                        .HasForeignKey("Id_ArrivalPort")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WebAPI.Models.Port", "DeparturePort")
                        .WithMany("DepartingVoyages")
                        .HasForeignKey("Id_DeparturePort")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WebAPI.Models.Ship", "Ship")
                        .WithMany("Voyages")
                        .HasForeignKey("Id_Ship")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ArrivalPort");

                    b.Navigation("DeparturePort");

                    b.Navigation("Ship");
                });

            modelBuilder.Entity("WebAPI.Models.Country", b =>
                {
                    b.Navigation("Ports");
                });

            modelBuilder.Entity("WebAPI.Models.Port", b =>
                {
                    b.Navigation("ArrivingVoyages");

                    b.Navigation("DepartingVoyages");
                });

            modelBuilder.Entity("WebAPI.Models.Ship", b =>
                {
                    b.Navigation("Voyages");
                });
#pragma warning restore 612, 618
        }
    }
}
